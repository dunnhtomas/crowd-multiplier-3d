name: Enterprise Unity Build Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  UNITY_VERSION: 2023.3.0f1
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  security_scan:
    name: Security & Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Run Snyk Security Scan
        uses: snyk/actions/setup@master
      - run: snyk test --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true
      
      - name: SonarQube Analysis
        uses: sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true

  build_and_test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: security_scan
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - Android
          - iOS
          - WebGL
        buildType:
          - Development
          - Release
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      
      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-
      
      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildMethod: BuildScript.Build${{ matrix.buildType }}
        continue-on-error: true
      
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ matrix.buildType }}
          path: build
        continue-on-error: true

  deploy_staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Deploy to Azure Container Apps
        run: echo "Deploying to staging environment"
      
      - name: Run E2E Tests
        run: echo "Running end-to-end tests"
